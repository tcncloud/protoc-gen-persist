stages:
    - build
    - deploy

build-linux:
    stage: build
    image: ubuntu:20.04 
    script:
        - apt update && apt install -y build-essential xz-utils git wget curl 
        - ./pleasew -a linux_amd64 test -p -v 2 ...
        - ./pleasew -a linux_amd64 build -p -v 2 ...
    artifacts:
        paths:
            - plz-out/bin/protoc-gen-persist*
        expire_in: 30mins

build-osx-intel:
    stage: build
    tags:
        - osx-intel
    script:
        - ./pleasew -a darwin_amd64 test -p -v 2 ...
        - ./pleasew -a darwin_amd64 build -p -v 2 ...
    artifacts:
        paths:
            - plz-out/bin/protoc-gen-persist*
        expire_in: 30mins

build-osx-arm64:
    stage: build
    tags:
        - osx-arm64
    script:
        - ./pleasew -a darwin_arm64 test -p -v 2 ...
        - ./pleasew -a darwin_arm64 build -p -v 2 ...
        - mv plz-out/bin/darwin_arm64/protoc-gen-persist* plz-out/bin
    artifacts:
        paths:
            - plz-out/bin/protoc-gen-persist*
        expire_in: 30mins

deploy:
    stage: deploy
    image: ubuntu:20.04
    dependencies:
        - build-linux
        - build-osx-intel
        - build-osx-arm64
    only:
        - tags
    script:
        - apt update && apt install -y curl bzip2
        - curl -Lo - https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz | tar zxf -
        - mv ghr_v0.13.0_linux_amd64/ghr .
        - ls -lR plz-out/bin
        - mkdir artifacts
        - for i in plz-out/bin/protoc-gen-persist*; do cp $i protoc-gen-persist; tar cjvf artifacts/$(basename $i).tar.gz protoc-gen-persist; done
        - ./ghr -t ${GITHUB_TOKEN} -u tcncloud -r protoc-gen-persist -c ${CI_COMMIT_SHA} -replace  ${CI_COMMIT_TAG} ./artifacts/ 

